@* @model BTL_WNC.ViewModels.TaskViewModel

@{
    var task = Model?.Task;
    var users = Model?.Users;
}

<form asp-action="AddTask" method="post">
    <div class="form-group">
        <label asp-for="Task.ProjectId"></label>
        <select asp-for="Task.ProjectId" asp-items="ViewBag.Projects" class="form-control">
            <option value="">Select Project</option>
            @foreach (var project in ViewBag.Projects)
            {
                <option value="@project.Id">@project.Name</option>
            }
        </select>
        <span asp-validation-for="Task.ProjectId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Task.Title"></label>
        <input asp-for="Task.Title" class="form-control" />
        <span asp-validation-for="Task.Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Task.Status"></label>
        <input asp-for="Task.Status" class="form-control" />
        <span asp-validation-for="Task.Status" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Task.Content"></label>
        <input asp-for="Task.Content" class="form-control" />
        <span asp-validation-for="Task.Content" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Task.DueDate"></label>
        <input asp-for="Task.DueDate" class="form-control" type="date" />
        <span asp-validation-for="Task.DueDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Users</label>
        @if (users != null)
        {
            foreach (var user in users)
            {
                <div>
                    <input type="checkbox" name="SelectedUsers" value="@user.Id" />
                    <label>@user.Name</label>
                </div>
            }
        }
    </div>

    <button type="submit" class="btn btn-primary">Add Task</button>
</form> *@

@model BTL_WNC.ViewModels.TaskViewModel

@{
    ViewData["Title"] = "Task";
}

<h1>Add Task</h1> 
 <form asp-action="AddTask" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <input type="hidden" asp-for="Task.ProjectId" />
    <input type="hidden" asp-for="Task.Status" />

    <div class="form-group">
        <label asp-for="Task.Title" class="control-label"></label>
        <input asp-for="Task.Title" class="form-control" />
        <span asp-validation-for="Task.Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Task.Content" class="control-label"></label>
        <textarea asp-for="Task.Content" class="form-control"></textarea>
        <span asp-validation-for="Task.Content" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Task.DueDate" class="control-label"></label>
        <input asp-for="Task.DueDate" class="form-control" type="date" />
        <span asp-validation-for="Task.DueDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label class="control-label">Assign Users</label>
        @foreach (var user in Model.Users)
        {
            <div class="form-check">
                <input class="form-check-input" type="checkbox" name="SelectedUsers" value="@user.Id" id="user_@user.Id" />
                <label class="form-check-label" for="user_@user.Id">
                    @user.Name
                </label>
            </div>
        }
        <span asp-validation-for="SelectedUsers" class="text-danger"></span>
    </div>


    <div class="form-group">
        <input type="submit" value="Add Task" class="btn btn-primary" />
    </div>
</form>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
