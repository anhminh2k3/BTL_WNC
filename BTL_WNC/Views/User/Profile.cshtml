@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model BTL_WNC.Models.User

@{
    ViewData["Title"] = "Profile";
}

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

<style>
    .profile-container {
        display: flex;
        align-items: center; /* Center items vertically */
        border: 1px solid #ddd; /* Optional: border around the whole profile container */
        padding: 15px;
        border-radius: 8px; /* Optional: rounded corners for the container */
        width: 70%;
    }

    .profile-image {
        height: 200px; /* Adjust the height as needed */
        width: auto; /* Maintain aspect ratio */
        object-fit: cover; /* Ensure the image covers the area without stretching */
        border-radius: 8px; /* Optional: rounded corners for the image */
    }

    .profile-info {
        flex: 1; /* Allow this column to grow and fill the space */
    }

    .vertical-line {
        border-left: 2px solid #ddd; /* Vertical line color and thickness */
        height: 100%; /* Full height to match the profile container */
        margin: 0 20px; /* Space around the vertical line */
    }

    .task-list {
        margin-top: 30px;
    }

    .task-table-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .task-item {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 10px;
        width: 345px; /* Adjust the width as needed */
        box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Optional: Add a subtle shadow */
        text-align: center;
    }

        .task-item h3 {
            margin-top: 0;
        }

        .task-item p {
            margin: 0;
            padding: 5px 0;
        }

    .edit-profile-button {
        position: absolute;
        top: 15px;
        right: 15px;
    }

    .edit-profile-form {
        display: none;
        margin-top: 20px;
    }
</style>
<div class="container mt-4">
    <h1>Profile</h1>
    <div class="profile-container">
        <div class="profile-image">
            @if (Context.Session.GetString("Role") == "role1")
            {
                <img src="~/image/anhadmin.jpg" class="profile-image" />
            }
            else
            {
                <img src="~/image/image_user.jpg" class="profile-image" />
            }
        </div>

        <div class="vertical-line"></div>

        <div class="profile-info">
            <div class="profile-card">
                <div class="card-body">
                    <h5 class="card-title">@Model.Name's Profile</h5>
                    <p class="card-text" style="font-weight: bold; color: black; font-size: 1em;">Name: @Model.Name</p>
                    <p class="card-text"><strong>Email:</strong> @Model.Email</p>
                    <p class="card-text"><strong>Phone:</strong> @Model.PhoneNumber</p>
                </div>
            </div>
        </div>
        @* <button class="btn btn-primary edit-profile-button" onclick="showEditForm()">Edit Profile</button> *@
    </div>

    @* ấn Edit profile thì nó hiện ra form này để chỉnh sửa *@
    @* <div class="edit-profile-form" id="editProfileForm">
        <form asp-action="EditProfile" method="post">
            <input type="hidden" name="Id" value="@Model.Id" />
            <div class="form-group">
                <label for="Name">Name</label>
                <input type="text" class="form-control" id="Name" name="Name" value="@Model.Name" required />
            </div>
            <div class="form-group">
                <label for="Email">Email</label>
                <input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" required />
            </div>
            <div class="form-group">
                <label for="PhoneNumber">Phone</label>
                <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" value="@Model.PhoneNumber" required />
            </div>
            <button type="submit" class="btn btn-success">Update</button>
            <button type="button" class="btn btn-secondary" onclick="hideEditForm()">Cancel</button>
        </form>
    </div> *@


    <div class="task-list">
        <h2>Các Nhiệm Vụ</h2>
        <div class="task-table-container">
            @if (Model.Tasks != null && Model.Tasks.Any())
            {
                foreach (var task in Model.Tasks)
                {
                    <div class="task-item">
                        <h3>@task.Title</h3>
                        <p>@task.Content</p>
                        <p>Due Date: @task.DueDate.ToShortDateString()</p>
                        <p>Status: @task.Status</p>
                    </div>
                }
            }
            else
            {
                <p>Không có nhiệm vụ nào.</p>
            }
        </div>
    </div>
</div>

@* <script>
    function showEditForm() {
        document.getElementById('editProfileForm').style.display = 'block';
    }

    function hideEditForm() {
        document.getElementById('editProfileForm').style.display = 'none';
    }
</script> *@
